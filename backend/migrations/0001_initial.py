# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-24 17:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Office',
            fields=[
                ('officecode', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('officename', models.CharField(max_length=250, unique=True)),
                ('attribution', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateTimeField(null=True)),
                ('enddate', models.DateTimeField(null=True)),
                ('officecode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Office')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('orgcode', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('orgname', models.CharField(max_length=250)),
                ('description', models.CharField(max_length=500)),
                ('datejoined', models.DateTimeField(null=True)),
                ('address1', models.CharField(max_length=250, null=True)),
                ('address2', models.CharField(max_length=250, null=True)),
                ('city', models.CharField(max_length=100, null=True)),
                ('state', models.CharField(max_length=100, null=True)),
                ('zip', models.CharField(max_length=100, null=True)),
                ('phonenumber', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startdate', models.DateTimeField(null=True)),
                ('enddate', models.DateTimeField(null=True)),
                ('nativecountry', models.CharField(max_length=100, null=True)),
                ('citizenship', models.CharField(max_length=250, null=True)),
                ('isdelegate', models.IntegerField(choices=[(0, 'No'), (1, 'Yes')])),
                ('orgcode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('servicecode', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('servicename', models.CharField(max_length=250)),
                ('servicedescription', models.CharField(max_length=250, null=True)),
                ('premium', models.DecimalField(decimal_places=10, max_digits=19)),
                ('allocation', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('subscriberid', models.IntegerField(primary_key=True, serialize=False)),
                ('requestdate', models.DateTimeField()),
                ('startdate', models.DateTimeField(null=True)),
                ('enddate', models.DateTimeField(null=True)),
                ('motifcancellation', models.CharField(max_length=250, null=True)),
                ('beneficiaryid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.Subscriber')),
                ('servicecode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Service')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('subscriptiontypecode', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('subscriptiontypename', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransferSubscription',
            fields=[
                ('transferid', models.IntegerField(primary_key=True, serialize=False)),
                ('requestdate', models.DateTimeField()),
                ('transferdate', models.DateTimeField(null=True)),
                ('subscriberid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Subscriber')),
                ('transferfrom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transferfrom', to='backend.Organization')),
                ('transferto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transferto', to='backend.Organization')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('username', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=100)),
                ('middlename', models.CharField(max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100)),
                ('dobday', models.IntegerField(null=True)),
                ('dobmonth', models.IntegerField(null=True)),
                ('dobyear', models.IntegerField(null=True)),
                ('email', models.CharField(max_length=250)),
                ('officephone', models.CharField(max_length=100, null=True)),
                ('cellphone', models.CharField(max_length=100, null=True)),
                ('address1', models.CharField(max_length=250, null=True)),
                ('address2', models.CharField(max_length=250, null=True)),
                ('city', models.CharField(max_length=250, null=True)),
                ('state', models.CharField(max_length=100, null=True)),
                ('zip', models.CharField(max_length=100, null=True)),
                ('employername', models.CharField(max_length=250, null=True)),
                ('empaddress1', models.CharField(max_length=250, null=True)),
                ('empaddress2', models.CharField(max_length=250, null=True)),
                ('empcity', models.CharField(max_length=250, null=True)),
                ('empstate', models.CharField(max_length=100, null=True)),
                ('empzip', models.CharField(max_length=100, null=True)),
                ('empphone', models.CharField(max_length=100, null=True)),
                ('jobtitle', models.CharField(max_length=250, null=True)),
                ('governmentidtype', models.CharField(max_length=100, null=True)),
                ('governmentidnum', models.CharField(max_length=100, null=True)),
                ('govidissuecountry', models.CharField(max_length=100, null=True)),
                ('govidissuestate', models.CharField(max_length=100, null=True)),
                ('govidissuedate', models.DateTimeField(null=True)),
                ('govidissueexpire', models.DateTimeField(null=True)),
                ('password', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='subscriber',
            name='subscriptiontype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.SubscriptionType'),
        ),
        migrations.AddField(
            model_name='subscriber',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.UserInfo'),
        ),
        migrations.AddField(
            model_name='organizationmember',
            name='subscriberid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Subscriber'),
        ),
        migrations.AddField(
            model_name='officer',
            name='subscriberid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.Subscriber'),
        ),
    ]
